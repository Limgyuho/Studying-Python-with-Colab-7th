# -*- coding: utf-8 -*-
"""파이썬 기본공부 7

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ymyNshZVLTU0qB577teTyYR6F5yfFjSI
"""

#리스트 설명
#리스트는 인덱스와 값을 가진다
#장점은 데이터를 추가하기 편하다
#단점은 데이터를 가져오기 불편하다
#단점은 특정 데이터를 가져오기 불편하다
ages = [10,20,30]

print(ages[0])
print(ages[1])
print(ages[2])

print(ages)

ages.append(40)

print(ages)

print(ages[3])

for i in ages:
  print(i)

#딕셔너리 설명
#딕셔너리는 키와 값으로 분류 되어있다
#장점은 데이터를 가져올때 편하다
#단점은 데이터를 넣을때 불편하다
#데이터의 라벨링을 수동으로 해야 한다
#규칙성을 부여해야 한다
ages = {
    "철수" : 10,
    "영희" : 20,
    "영수" : 30,
}

print(ages["철수"])
print(ages["영희"])
print(ages["영수"])
print(ages)
ages["민수"] = 40
#정보를 하나더 추가하는 방법
print(ages)

print(ages["민수"])

#딕셔너리의 key 출력
print("==v1==")
for name in ages:
  print(name)

#딕셔너리의 values 출력
print("==v2==")
for name in ages:
  print(ages[name])

#key와 values를 가져오기
print("==v3==")
for name in ages:
  age = ages[name]
  print("{}의 나이  : {}".format(name,age))

#key사용법
print("==v4==")
print(ages.keys())
for name in ages.keys():
  age = ages[name]
  print("{}의 나이  : {}".format(name,age))

#values 사용법
print("==v5==")
print(ages.values())
for name in ages.values():
  print(" 나이  : {}".format(age))

#items 사용법
#itmes는 key와 value를 둘다 사용해야 하므로
#for name,age in ages.items():형식으로 사용한다 
print("==v5==")
print(ages.items()) 
#결과가 ([('철수', 10),생략)안에 있는 소괄호를 튜플이라고 한다
#튜플은 하나의 자료형이다 데이터를 묶어서 사용가능하다
#튜플과 리스트의 가장큰 차이는 튜플은 요소값을 변환이 가능하다는 점이다
for name,age in ages.items():
  print("{}의 나이  : {}".format(name,age))



print("==v5-1==")

if "철수" in ages:
  del ages["철수"]

if "철수" in ages:
  del ages["철수"]

print(ages.items()) 
for name,age in ages.items():
  print("{}의 나이  : {}".format(name,age))

#결과는 아래와 같이 나온다 리스트 처럼 보여주지만 리스트는 아니다
#타입은 아애롸 같으며 리스트는 아니다
#<class 'dict_keys'>
#<class 'dict_values'>
#<class 'dict_items'>
print(type(ages.keys()))
print(type(ages.values()))
print(type(ages.items()))

#문제 : 딕셔너리에 각 달의 마지막 날들을 한번에 담기
#조건 : 1월 ~ 3월까지
#조건 : 2월의 마지막은 28일로 함
#조건 : 첫 데이터의 key는 "1월", value는 31

month_end_days = {
    "1월" : 31,
    "2월" : 28,
    "3월" : 31,
}

print(month_end_days["1월"])
print(month_end_days["2월"])
print(month_end_days["3월"])

print("== 정답 v1 ==")
month_end_days = {}

month_end_days["1월"] = 31
month_end_days["2월"] = 28
month_end_days["3월"] = 31

print(month_end_days)

print("== 정답 v2 ==")
month_end_days = {}

for i in range(1, 12 + 1):
  month = str(i) + "월"

  end_day = 31

  if i == 2:
    end_day = 28
  elif i in [4, 6, 9, 11]:
    end_day = 30

  month_end_days[month] = end_day

print(month_end_days)

print("== 정답 v3 ==")
month_end_days = {}

month_end_days_list_ver = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]

for i, end_day in enumerate(month_end_days_list_ver):
  month = str(i + 1) + "월"
  month_end_days[month] = end_day

print(month_end_days)

#문제 : 딕셔너리에 각 달의 마지막 날들을 한번에 담고, 수작업으로 순회출력

month_end_days = {
    "1월" : 31,
    "2월" : 28,
    "3월" : 31,
}


print(month_end_days["1월"])
print(month_end_days["2월"])
print(month_end_days["3월"])

#문제 : 딕셔너리에 각 달의 마지막 날들을 한번에 담고, keys()로 key 순회출력
month_end_days = {
    "1월" : 31,
    "2월" : 28,
    "3월" : 31,
}
print("버전1")
for key in month_end_days:
  print(key)
print("버전2")
for key in month_end_days.keys():
  print(key)

#문제 : 딕셔너리에 각 달의 마지막 날들을 한번에 담고, keys()로 key, value 순회출력
month_end_days = {
    "1월" : 31,
    "2월" : 28,
    "3월" : 31,
}

for month in month_end_days.keys():
  end_day = month_end_days[month]
  print(month + "은" + str(end_day) + "일 까지 있습니다")

#문제 : 딕셔너리에 각 달의 마지막 날들을 한번에 담고, values()로 value 순회출력
month_end_days = {
    "1월" : 31,
    "2월" : 28,
    "3월" : 31,
}

for end_day in month_end_days.values():
  print(end_day)

#문제 : 딕셔너리에 각 달의 마지막 날들을 한번에 담고, items()로 key, value 순회출력
month_end_days = {
    "1월" : 31,
    "2월" : 28,
    "3월" : 31,
}

print(month_end_days.items())
for key,value in month_end_days.items():
  print(key + " : " + str(value) + "일")

#문제 : 딕셔너리에 각 달의 마지막 날들을 한번에 담고, 3월 정보를 제거
month_end_days = {
    "1월" : 31,
    "2월" : 28,
    "3월" : 31,
}

print(month_end_days)

if "3월" in month_end_days.keys():
  del month_end_days["3월"]
if "3월" in month_end_days.keys():
  del month_end_days["3월"]


print(month_end_days)

#문제 : 딕셔너리에 각 달의 마지막 날들을 한번에 담고, 2월을 29일로 수정
month_end_days = {
    "1월" : 31,
    "2월" : 28,
    "3월" : 31,
}

print(month_end_days)

month_end_days["2월"] = 29

print(month_end_days)

#문제 : 딕셔너리에 각 달의 마지막 날들을 한번에 담고, update를 이용하여, 2월을 29일로 수정하고 4월, 5월의 정보도 추가
month_end_days = {
    "1월" : 31,
    "2월" : 28,
    "3월" : 31,
}

month_end_days2 = {"2월" : 29, "4월" : 30, "5월" : 31}
#update의 기능은 같은 키가 있다면 수정 다른 키가 있다면 추가를 해준다
month_end_days.update(month_end_days2)

print(month_end_days)

#문제 : 영수, 영희, 철수, 민수의 나이를 딕셔너리에 담기
#조건 : 가장 효율적인 데이터 구조를 유지해주세요.
#조건 : 변수명을 명확하고 간결하게 지어주세요.
#조건 : 영수 11살
#조건 : 영희 12살
#조건 : 철수 13살
#조건 : 민수 14살

ages = {
    "영수" : 11,
    "영희" : 12,
    "철수" : 13,
    "민수" : 14
}

print(ages)

#문제 : 영수, 영희, 철수, 민수의 나이를 딕셔너리에 담고, 데이터를 넣은 순서대로 순회출력
ages = {
    "영수" : 11,
    "영희" : 12,
    "철수" : 13,
    "민수" : 14
}
#파이썬 3.5이하
print("==v1==")

names = ["영수","영희","철수","민수"]

for name in names:
  print(name + " : " +str(ages[name])+ "살")

#파이썬 3.6이상

print("==v2==")

for name,age in ages.items():
  print(name + " : " +str(ages[name])+ "살")